apiVersion: v1
kind: ConfigMap 
metadata: 
  name: logstash-config
  namespace: monitoring
  labels:
      k8s-app: logstash 
data:
  logstash.yml: |- 
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline 
  logstash.conf: |- 
    input {
      beats {
        port => 5044
      }
    }
     
    filter {
      if [kubernetes][container][name] not in ["fence-service", "arborist-service", "tube-service", "guppy-service", "portal-service", "pidgin-service", "peregrine-service", "sheepdog-service", "indexd-service", "kube-controller-manager"] {
        drop {}
      } 
    }

    output {
      elasticsearch {
        hosts => ["${ELASTIC_HOST}"]
      }
    }

---
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: logstash 
  namespace: monitoring
  labels:
    k8s-app: logstash 
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: logstash
  template:
    metadata:
      labels:
        k8s-app: logstash
    spec:
      containers:
        - name: logstash 
          image: docker.elastic.co/logstash/logstash:7.6.2
          ports:
            - containerPort: 5044 
          env:
            - name: ELASTIC_HOST
              value: elasticsearch-service:9200
          volumeMounts:
            - name: config
              mountPath: /usr/share/logstash/config
            - name: pipeline
              mountPath: /usr/share/logstash/pipeline
      volumes:
        - name: config
          configMap:
            name: logstash-config
            items:
              - key: logstash.yml
                path: logstash.yml
        - name: pipeline
          configMap:
            name: logstash-config
            items: 
              - key: logstash.conf
                path: logstahs.conf
--- 
apiVersion: v1 
kind: Service 
metadata:
  name: logstash-service
  namespace: monitoring
  labels:
    k8s-app: logstash 
spec:
  selector:
    k8s-app: logstash 
  ports:
    - protocol: TCP
      port: 5044
      targetPort: 5044 
  type: ClusterIP
