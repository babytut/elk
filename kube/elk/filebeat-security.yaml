---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-security-config
  namespace: monitoring
  labels:
    k8s-app: filebeat-security
data:
  filebeat.yml: |-
    filebeat.modules:
    - module: system
      syslog:
        enabled: true 
        var.paths: ["/hostfs/var/log/syslog*"]
      auth:
        enabled: true
        var.paths: ["/hostfs/var/log/auth.log*"]
    # - module: auditd
    #   log: 
    #     enabled: true 
    #     var.paths: ["/hostfs/var/log/audit.log*"]

    processors:
      - add_locale:
          format: abbreviation
    # - drop_fields:
    #    fields: ["event.timezone"]
      - add_fields:
          target: event
          fields:
            timezone: ICT

    setup.dashboards.enabled: true
    setup.kibana.host: ${KIBANA_HOST}
    output.elasticsearch:
      hosts: ['${ELASTICHSEARCH_HOST}']

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat-security
  namespace: monitoring
  labels:
    k8s-app: filebeat-security
spec:
  selector:
    matchLabels:
      k8s-app: filebeat-security
  template:
    metadata:
      labels:
        k8s-app: filebeat-security
    spec:
      serviceAccountName: filebeat-security
      terminationGracePeriodSeconds: 30
      containers:
      - name: filebeat-security
        image: docker.elastic.co/beats/filebeat:7.6.2
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTICHSEARCH_HOST
          value: elasticsearch-service:9200
        - name: KIBANA_HOST
          value: kibana-service:5601
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlog
          mountPath: /hostfs/var/log
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-security-config
      - name: varlog
        hostPath:
          path: /var/log
      # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
      - name: data
        hostPath:
          path: /var/lib/filebeat-security-data
          type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: filebeat-security
subjects:
- kind: ServiceAccount
  name: filebeat-security
  namespace: monitoring
roleRef:
  kind: ClusterRole
  name: filebeat-security
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: filebeat-security
  labels:
    k8s-app: filebeat-security
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat-security
  namespace: monitoring
  labels:
    k8s-app: filebeat-security
---